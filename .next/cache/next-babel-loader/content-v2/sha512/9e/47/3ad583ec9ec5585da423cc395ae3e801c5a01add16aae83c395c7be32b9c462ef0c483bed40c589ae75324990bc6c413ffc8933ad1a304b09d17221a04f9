{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/joaopfa/Desktop/Cursos e imers\\xF5es/NLW 05 Podcastr/podcastrnext/src/pages/index.tsx\";\n//formas de consumo de uma api em next\n// SPA se precisamos que as infos sejam carregadas no momento q o user acessa a página,\n// aí se fazem melhores os outros métodos:\n// SSR Server Side Rendering\n// SSG\nexport default function Home() {\n  // SPA: esse método n possibilita a iondexação por parte dos crowlers, \n  // por estes n aguardam a chamada completa da api finalizar para então \n  // coletar as infos disponíveis na página pra indexar no google e tals\n  // useEffect(() => {\n  //   fetch('http://localhost:3333/episodes')\n  //   .then(response => response.json())\n  //   .then(data => console.log(data))\n  // }, [])\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Index\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n} // SSR p/ fzer SSR no next: \n// dentro de qlqr página/arquivo na pasta pages\n//exportar a seguinte função: \n\nexport async function getServerSideProps() {\n  //fazendo isso, o next já entende q ele precisa executar essa função,\n  //antes de exibir o conteudo da página pro usuário final\n  const response = await fetch('http://localhost:3333/episodes').then(response => response.json()).then(data => console.log(data));\n}","map":{"version":3,"sources":["/home/joaopfa/Desktop/Cursos e imersões/NLW 05 Podcastr/podcastrnext/src/pages/index.tsx"],"names":["Home","getServerSideProps","response","fetch","then","json","data","console","log"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AAIA,eAAe,SAASA,IAAT,GAAgB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,C,CAED;AACA;AACA;;AACA,OAAO,eAAeC,kBAAf,GAAoC;AACzC;AACA;AACA,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAD,CAAL,CACtBC,IADsB,CACjBF,QAAQ,IAAIA,QAAQ,CAACG,IAAT,EADK,EAEtBD,IAFsB,CAEjBE,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAFS,CAAvB;AAGD","sourcesContent":["//formas de consumo de uma api em next\n// SPA se precisamos que as infos sejam carregadas no momento q o user acessa a página,\n// aí se fazem melhores os outros métodos:\n// SSR Server Side Rendering\n// SSG\n\nimport { useEffect } from \"react\"\n\nexport default function Home() {\n  // SPA: esse método n possibilita a iondexação por parte dos crowlers, \n  // por estes n aguardam a chamada completa da api finalizar para então \n  // coletar as infos disponíveis na página pra indexar no google e tals\n  // useEffect(() => {\n  //   fetch('http://localhost:3333/episodes')\n  //   .then(response => response.json())\n  //   .then(data => console.log(data))\n  // }, [])\n\n\n  return (\n    <h1>Index</h1>\n  )\n}\n\n// SSR p/ fzer SSR no next: \n// dentro de qlqr página/arquivo na pasta pages\n//exportar a seguinte função: \nexport async function getServerSideProps() {\n  //fazendo isso, o next já entende q ele precisa executar essa função,\n  //antes de exibir o conteudo da página pro usuário final\n  const response = await fetch('http://localhost:3333/episodes')\n  .then(response => response.json())\n  .then(data => console.log(data))\n}"]},"metadata":{},"sourceType":"module"}